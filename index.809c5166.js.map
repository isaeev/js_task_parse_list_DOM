{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAOQ,EAUA,EAjBF,EAAO,SAAS,aAAa,CAAC,MAE9B,EAAe,SAAC,CAAtB,EACE,OAAO,OAAO,EAAO,OAAO,CAAC,QAAS,IACxC,EAGQ,EAAS,EAAG,AA0BX,EA1BoB,QAAQ,EAAE,IAAI,CACvC,SAAC,CAAA,CAAG,CADN,EACY,OAAA,EAAa,EAAE,OAAO,CAAC,MAAM,EAAI,EAAa,EAAE,OAAO,CAAC,MAAM,C,GAG1E,EAAK,SAAS,CAAG,GAEjB,EAAM,OAAO,CAAC,SAAC,CAAf,EAAwB,OAAA,EAAK,WAAW,CAAC,E,GAInC,EAAS,EAAE,CAEhB,EAAG,AAeO,EAfE,QAAQ,EAAE,OAAO,CAAC,SAAC,CAA/B,EACC,IAAM,EAAW,CACf,KAAM,EAAK,WAAW,CAAC,IAAI,GAC3B,SAAU,EAAK,OAAO,CAAC,QAAQ,CAC/B,OAAQ,EAAK,OAAO,CAAC,MAAM,CAC3B,IAAK,EAAK,OAAO,CAAC,GAAG,AACvB,EAEA,EAAO,IAAI,CAAC,EACd","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar list = document.querySelector(\"ul\");\nvar convertToNum = function(string) {\n    return Number(string.replace(/[$,]/g, \"\"));\n};\nfunction sortList(nodeList) {\n    var array = _to_consumable_array(nodeList.children).sort(function(a, b) {\n        return convertToNum(b.dataset.salary) - convertToNum(a.dataset.salary);\n    });\n    list.innerHTML = \"\";\n    array.forEach(function(item) {\n        return list.appendChild(item);\n    });\n}\nfunction getEmployees(nodeList) {\n    var result = [];\n    _to_consumable_array(nodeList.children).forEach(function(item) {\n        var employee = {\n            name: item.textContent.trim(),\n            position: item.dataset.position,\n            salary: item.dataset.salary,\n            age: item.dataset.age\n        };\n        result.push(employee);\n    });\n    return result;\n}\nsortList(list);\ngetEmployees(list);\n\n//# sourceMappingURL=index.809c5166.js.map\n","'use strict';\n\nconst list = document.querySelector('ul');\n\nconst convertToNum = (string) => {\n  return Number(string.replace(/[$,]/g, ''));\n};\n\nfunction sortList(nodeList) {\n  const array = [...nodeList.children].sort(\n    (a, b) => convertToNum(b.dataset.salary) - convertToNum(a.dataset.salary),\n  );\n\n  list.innerHTML = '';\n\n  array.forEach((item) => list.appendChild(item));\n}\n\nfunction getEmployees(nodeList) {\n  const result = [];\n\n  [...nodeList.children].forEach((item) => {\n    const employee = {\n      name: item.textContent.trim(),\n      position: item.dataset.position,\n      salary: item.dataset.salary,\n      age: item.dataset.age,\n    };\n\n    result.push(employee);\n  });\n\n  return result;\n}\n\nsortList(list);\ngetEmployees(list);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","array","result","list","document","querySelector","convertToNum","string","Number","replace","nodeList","children","sort","a","b","dataset","salary","innerHTML","forEach","item","appendChild","employee","textContent","trim","position","age","push"],"version":3,"file":"index.809c5166.js.map"}